// <auto-generated />
using System;
using MgtuLibrary.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MgtuLibrary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241126143046_Migration1")]
    partial class Migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MgtuLibrary.Entities.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameBook")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Author = "А.С. Пушкин",
                            NameBook = "Капитанская дочка",
                            Publisher = "Publisher1",
                            Town = "Москва"
                        },
                        new
                        {
                            Id = 2L,
                            Author = "Есенин С.А.",
                            NameBook = "Черный человек",
                            Publisher = "Publisher1",
                            Town = "Москва"
                        },
                        new
                        {
                            Id = 3L,
                            Author = "Иван Тургенев",
                            NameBook = "Муму",
                            Publisher = "Publisher1",
                            Town = "Орел"
                        });
                });

            modelBuilder.Entity("MgtuLibrary.Entities.LoanOfBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrentTenure")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateLoan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateReturn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ReaderId")
                        .HasColumnType("bigint");

                    b.Property<int>("Tenure")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReaderId");

                    b.ToTable("LoanOfBooks");
                });

            modelBuilder.Entity("MgtuLibrary.Entities.Reader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Gender = "муж",
                            Group = "АВБ-21-2",
                            LastName = "Петров",
                            Name = "Валера"
                        },
                        new
                        {
                            Id = 2L,
                            Gender = "жен",
                            Group = "АВБ-21-1",
                            LastName = "Сидоров",
                            Name = "Семен"
                        },
                        new
                        {
                            Id = 3L,
                            Gender = "жен",
                            Group = "АВб-20-2",
                            LastName = "Столешникова",
                            Name = "Валерия"
                        });
                });

            modelBuilder.Entity("MgtuLibrary.Entities.LoanOfBook", b =>
                {
                    b.HasOne("MgtuLibrary.Entities.Book", "Book")
                        .WithMany("LoanOfBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MgtuLibrary.Entities.Reader", "Reader")
                        .WithMany("LoanOfBooks")
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("MgtuLibrary.Entities.Book", b =>
                {
                    b.Navigation("LoanOfBooks");
                });

            modelBuilder.Entity("MgtuLibrary.Entities.Reader", b =>
                {
                    b.Navigation("LoanOfBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
